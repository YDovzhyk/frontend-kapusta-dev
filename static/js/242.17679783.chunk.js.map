{"version":3,"file":"static/js/242.17679783.chunk.js","mappings":"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","sources":["components/FormComponents/FormInputNumber.jsx","components/FormComponents/optionsSelect.js","components/FormComponents/FormInputSelect.jsx","webpack://kapusta/./src/components/icons/Calculator/Calculator.module.scss?442e","components/icons/Calculator/Calculator.jsx","webpack://kapusta/./src/components/FormAddTransaction/FormAddTransaction.module.scss?7f6b","components/FormAddTransaction/FormAddTransaction.jsx","components/FormComponents/FormInputText.jsx","components/SlideWindow/SlideWindow.jsx","webpack://kapusta/./src/pages/IncomePage/IncomePage.module.scss?2e5a","pages/IncomePage/IncomePage.jsx"],"sourcesContent":["import { Controller } from 'react-hook-form';\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nconst TextFieldStyledMob = styled(TextField)({\n  '& div': {\n    width: '140px',\n    height: '44px',\n\n    background: '#F6F7FB',\n\n    border: '2px solid #FFFFFF',\n    borderRadius: '22px 0px 0px 22px',\n  },\n  '& div fieldset': {\n    border: '1px solid transparent',\n    borderRadius: '22px 0px 0px 22px',\n  },\n  '& input': {\n    padding: '12px 14px 12px 60px',\n\n    fontWeight: '700',\n    fontSize: '12px',\n    lineHeight: '1.17',\n    letterSpacing: '0.02em',\n    textTransform: 'initial',\n\n    color: 'var(--second-text-color)',\n    background: 'transparent',\n\n    borderRadius: '30px',\n  },\n  '& input::placeholder': {\n    color: 'var(--second-text-color)',\n    opacity: 1,\n  },\n  '& p': {\n    margin: '4px 0px',\n\n    textTransform: 'initial',\n  },\n});\n\nconst TextFieldStyledTab = styled(TextField)({\n  '& div': {\n    width: '110px',\n\n    border: '2px solid var(--btn-color)',\n    borderLeft: 'none',\n\n    background: 'var(--background-color)',\n    borderRadius: '0px 16px 16px 0px',\n  },\n  '& div fieldset': {\n    border: '1px solid transparent',\n  },\n  '& input': {\n    padding: '10px 40px 10px 0px',\n\n    fontWeight: '700',\n    fontSize: '12px',\n    lineHeight: '1.14',\n    letterSpacing: '0.02em',\n    textTransform: 'initial',\n    textAlign: 'center',\n\n    color: 'var(--second-text-color)',\n    background: 'transparent',\n  },\n  '& input::placeholder': {\n    paddingLeft: '30px',\n    color: 'var(--second-text-color)',\n    opacity: 1,\n  },\n  '& p': {\n    margin: '4px 0px',\n\n    textTransform: 'initial',\n  },\n});\n\nconst TextFieldStyledDesk = styled(TextField)({\n  '& div': {\n    width: '110px',\n\n    border: '2px solid var(--btn-color)',\n    borderLeft: 'none',\n\n    background: 'var(--background-color)',\n    borderRadius: '0px 16px 16px 0px',\n  },\n  '& div fieldset': {\n    border: '1px solid transparent',\n  },\n  '& input': {\n    padding: '10px 20px 10px 10px',\n\n    fontWeight: '700',\n    fontSize: '12px',\n    lineHeight: '1.14',\n    letterSpacing: '0.02em',\n    textTransform: 'initial',\n    textAlign: 'center',\n\n    color: 'var(--second-text-color)',\n    background: 'transparent',\n\n    borderRadius: '30px',\n  },\n  '& input::placeholder': {\n    paddingLeft: '20px',\n    color: 'var(--second-text-color)',\n    opacity: 1,\n  },\n  '& p': {\n    margin: '4px 0px',\n\n    textTransform: 'initial',\n  },\n});\n\nexport default function FormInputNumber({ name, control, label, required }) {\n  const isMobile = useMediaQuery('(max-width: 767.98px)');\n  const isTabletMin = useMediaQuery('(min-width: 768px)');\n  const isTabletMax = useMediaQuery('(max-width: 1279.98px)');\n  const isDesktop = useMediaQuery('(min-width: 1280px)');\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      rules={{\n        required: required,\n        pattern: [0 - 9],\n      }}\n      render={({ field: { onChange, value }, fieldState: { error } }) => (\n        <>\n          {isMobile && (\n            <TextFieldStyledMob\n              type=\"number\"\n              variant=\"outlined\"\n              placeholder={label}\n              value={value}\n              onChange={onChange}\n              error={!!error}\n              helperText={error ? error.message : null}\n            />\n          )}\n          {isTabletMin && isTabletMax && (\n            <TextFieldStyledTab\n              type=\"number\"\n              variant=\"outlined\"\n              placeholder={label}\n              value={value}\n              onChange={onChange}\n              error={!!error}\n              helperText={error ? error.message : null}\n            />\n          )}\n          {isDesktop && (\n            <TextFieldStyledDesk\n              type=\"number\"\n              variant=\"outlined\"\n              placeholder={label}\n              value={value}\n              onChange={onChange}\n              error={!!error}\n              helperText={error ? error.message : null}\n            />\n          )}\n        </>\n      )}\n    />\n  );\n}\n","export const optionsExp = [\n  'Transport',\n  'Products',\n  'Health',\n  'Alcohol',\n  'Entertainment',\n  'Housing',\n  'Technique',\n  'Communal, communication',\n  'Sports, hobbies',\n  'Education',\n  'Other',\n];\n\nexport const optionsInc = ['Salary', 'Add.Income'];\n","import { useLocation } from 'react-router-dom';\nimport { Controller } from 'react-hook-form';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { styled } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport { optionsExp, optionsInc } from './optionsSelect';\n\nconst CssFormControl = styled(FormControl)({\n  width: '100%',\n\n  border: '2px solid var(--background-color)',\n  borderBottomRightRadius: '30px',\n\n  background: 'var(--second-background-color)',\n\n  '& div div': {\n    fontWeight: '700',\n    fontSize: '12px',\n    lineHeight: '1.17',\n    letterSpacing: '0.02em',\n\n    textAlign: 'left',\n    textTransform: 'initial',\n\n    color: 'var(--second-text-color)',\n  },\n  '& div svg': {\n    fill: 'var(--text-color-input)',\n  },\n  '&.Mui-focused': { borderColor: 'transparent' },\n  '& div fieldset': {\n    border: '1px solid transparent',\n    borderBottomRightRadius: '30px',\n  },\n  '& .MuiFormLabel-root ': {\n    fontSize: '14px',\n    lineHeight: '1.14',\n    letterSpacing: '0.04em',\n    textAlign: 'left',\n    textTransform: 'initial',\n\n    color: 'var(--text-color-input)',\n  },\n});\n\nconst CssFormControlTab = styled(FormControl)({\n  width: '180px',\n\n  border: '2px solid var(--btn-color)',\n  borderLeft: 'none',\n\n  background: 'var(--background-color)',\n\n  '& div div': {\n    padding: '10px 15px',\n\n    fontWeight: '700',\n    fontSize: '12px',\n    lineHeight: '1.17',\n    letterSpacing: '0.02em',\n\n    textAlign: 'left',\n    textTransform: 'initial',\n\n    color: 'var(--second-text-color)',\n  },\n  '& div svg': {\n    fill: 'var(--text-color-input)',\n  },\n  '&.Mui-focused': { borderColor: 'transparent' },\n  '& div fieldset': {\n    border: '1px solid transparent',\n  },\n  '& .MuiFormLabel-root ': {\n    fontSize: '14px',\n    lineHeight: '1.14',\n    letterSpacing: '0.04em',\n    textAlign: 'left',\n    textTransform: 'initial',\n\n    color: 'var(--text-color-input)',\n  },\n});\n\nconst MenuItemStyled = styled(MenuItem)({\n  padding: '0px 20px',\n  height: '30px',\n\n  fontSize: 'var(--text-size)',\n  lineHeight: 'var(--line-height)',\n  letterSpacing: '0.02em',\n  textTransform: 'initial',\n\n  color: 'var(--text-color-input)',\n\n  '&:hover': {\n    background: 'var(--btn-color)',\n    color: 'var(--text-color)',\n  },\n  '&:focus': {\n    background: 'var(--btn-color)',\n    color: 'var(--text-color)',\n  },\n});\n\nexport default function FormInputSelect({ name, control, label, required }) {\n  const { pathname } = useLocation();\n\n  const isMobile = useMediaQuery('(max-width: 767.98px)');\n  const isTablet = useMediaQuery('(min-width: 768px)');\n\n  const options = pathname === '/expenses' ? optionsExp : optionsInc;\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      rules={{\n        required: required,\n      }}\n      render={({ field: { onChange, value }, fieldState: { error } }) => (\n        <>\n          {isMobile && (\n            <CssFormControl>\n              <Select\n                displayEmpty\n                labelId=\"select-standard-label\"\n                variant=\"outlined\"\n                value={value}\n                onChange={onChange}\n                label={label}\n                input={<OutlinedInput />}\n                error={!!error}\n              >\n                <MenuItemStyled disabled value=\"\">\n                  {label}\n                </MenuItemStyled>\n                {options.map(option => (\n                  <MenuItemStyled key={option} value={option}>\n                    {option}\n                  </MenuItemStyled>\n                ))}\n              </Select>\n            </CssFormControl>\n          )}\n          {isTablet && (\n            <CssFormControlTab>\n              <Select\n                displayEmpty\n                labelId=\"select-standard-label\"\n                variant=\"outlined\"\n                value={value}\n                onChange={onChange}\n                label={label}\n                input={<OutlinedInput />}\n                error={!!error}\n              >\n                <MenuItemStyled disabled value=\"\">\n                  {label}\n                </MenuItemStyled>\n                {options.map(option => (\n                  <MenuItemStyled key={option} value={option}>\n                    {option}\n                  </MenuItemStyled>\n                ))}\n              </Select>\n            </CssFormControlTab>\n          )}\n        </>\n      )}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Calculator_overlay__n7lq0\"};","import s from './Calculator.module.scss';\n\nexport default function CalculatorIcon({ width, height }) {\n  return (\n    <div className={s.overlay}>\n      <svg\n        viewBox=\"0 0 20 20\"\n        width={width}\n        height={height}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M17.031 0H2.97A1.76 1.76 0 0 0 1.21 1.758v16.484c0 .97.788 1.758 1.758 1.758H17.03a1.76 1.76 0 0 0 1.758-1.758V1.758A1.76 1.76 0 0 0 17.031 0Zm.586 18.242a.587.587 0 0 1-.586.586H2.97a.587.587 0 0 1-.586-.586V1.758c0-.323.263-.586.586-.586H17.03c.323 0 .586.263.586.586v16.484Z\"\n          fill=\"#1D2E4A\"\n        />\n        <path\n          d=\"M15.86 2.344H4.14a.586.586 0 0 0-.585.586v4.765c0 .324.262.586.586.586h11.718a.586.586 0 0 0 .586-.586V2.93a.586.586 0 0 0-.586-.586Zm-.587 4.765H4.727V3.516h10.546v3.593ZM6.484 9.453H4.141a.586.586 0 0 0-.586.586v2.344c0 .323.262.586.586.586h2.343a.586.586 0 0 0 .586-.586v-2.344a.586.586 0 0 0-.586-.586Zm-.586 2.344H4.727v-1.172h1.171v1.172ZM6.484 14.14H4.141a.586.586 0 0 0-.586.587v2.343c0 .324.262.586.586.586h2.343a.586.586 0 0 0 .586-.586v-2.343a.586.586 0 0 0-.586-.586Zm-.586 2.344H4.727v-1.172h1.171v1.172ZM11.172 9.453H8.828a.586.586 0 0 0-.586.586v2.344c0 .323.263.586.586.586h2.344a.586.586 0 0 0 .586-.586v-2.344a.586.586 0 0 0-.586-.586Zm-.586 2.344H9.414v-1.172h1.172v1.172ZM11.172 14.14H8.828a.586.586 0 0 0-.586.587v2.343c0 .324.263.586.586.586h2.344a.586.586 0 0 0 .586-.586v-2.343a.586.586 0 0 0-.586-.586Zm-.586 2.344H9.414v-1.172h1.172v1.172ZM15.86 9.453h-2.344a.586.586 0 0 0-.586.586v7.031c0 .324.262.586.586.586h2.343a.586.586 0 0 0 .586-.586v-7.03a.586.586 0 0 0-.586-.587Zm-.587 7.031h-1.171v-5.859h1.171v5.86Z\"\n          fill=\"#1D2E4A\"\n        />\n      </svg>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormAddTransaction_form__tN44S\",\"overlayBtn\":\"FormAddTransaction_overlayBtn__AkLVw\",\"overlayCalc\":\"FormAddTransaction_overlayCalc__gjoH8\"};","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport { addTransaction } from 'redux/transaction/transaction-operations';\nimport { getCurrentDate } from 'redux/transaction/transaction-selectors';\n\nimport FormInputText from 'components/FormComponents/FormInputText';\nimport FormInputNumber from 'components/FormComponents/FormInputNumber';\nimport FormInputSelect from 'components/FormComponents/FormInputSelect';\n\nimport Button from 'components/ui/Button/Button';\n\nimport CalculatorIcon from 'components/icons/Calculator/Calculator';\n\nimport CalendarHome from 'components/Calendar/Calendar';\n\nimport s from './FormAddTransaction.module.scss';\n\nexport default function FormAddTransaction() {\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const isTablet = useMediaQuery('(min-width: 768px)');\n\n  const currentDate = useSelector(getCurrentDate);\n\n  const { control, handleSubmit, reset } = useForm({\n    defaultValues: {\n      date: '',\n      description: '',\n      category: '',\n      balance: '',\n    },\n  });\n\n  const onSubmit = data => {\n    if (pathname === '/income') {\n      const addTransactionData = {\n        transitionName: 'income',\n        transitionDate: currentDate,\n        transitionCategory: data.category,\n        transitionValue: +data.balance,\n        transitionDescription: data.description,\n      };\n\n      dispatch(addTransaction(addTransactionData));\n    }\n\n    if (pathname === '/expenses') {\n      const addTransactionData = {\n        transitionName: 'expenses',\n        transitionDate: currentDate,\n        transitionCategory: data.category,\n        transitionValue: +data.balance,\n        transitionDescription: data.description,\n      };\n\n      dispatch(addTransaction(addTransactionData));\n    }\n\n    reset();\n  };\n\n  const resetForm = () => {\n    reset();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\n      {isTablet && <CalendarHome />}\n      <FormInputText\n        name=\"description\"\n        control={control}\n        label=\"Product description\"\n        required={true}\n      />\n      <FormInputSelect\n        name=\"category\"\n        control={control}\n        label=\"Product category\"\n        required={true}\n      />\n      <div className={s.overlayCalc}>\n        <FormInputNumber name=\"balance\" control={control} label=\"00.00\" required={true} />\n        <CalculatorIcon width=\"20\" height=\"20\" />\n      </div>\n      <div className={s.overlayBtn}>\n        <Button text=\"Input\" btnClass=\"btnFormAddExpInc\" />\n        <Button text=\"Clear\" btnClass=\"btnFormAddExpInc\" onClick={resetForm} />\n      </div>\n    </form>\n  );\n}\n","import { Controller } from 'react-hook-form';\nimport { useLocation } from 'react-router-dom';\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nconst TextFieldStyled = styled(TextField)({\n  '& div': {\n    border: 'none',\n    borderRadius: '30px',\n    background: 'var(--second-background-color)',\n  },\n  '& div input': {\n    padding: '17px',\n\n    fontSize: '14px',\n    lineHeight: '1.14',\n    letterSpacing: '0.04em',\n    textTransform: 'initial',\n\n    color: '#A6ABB9',\n    background: '#F6F7FB',\n\n    borderRadius: '30px',\n  },\n  '& p': {\n    margin: '4px 0px',\n\n    textTransform: 'initial',\n  },\n});\n\nconst TextFieldStyledExpInc = styled(TextField)({\n  width: '100%',\n\n  border: '2px solid var(--background-color)',\n  borderTopLeftRadius: '30px',\n  borderTopRightRadius: '30px',\n\n  background: 'var(--second-background-color)',\n  '& div input': {\n    padding: '17px',\n\n    fontWeight: '700',\n    fontSize: '12px',\n    lineHeight: '1.17',\n    letterSpacing: '0.02em',\n    textTransform: 'initial',\n\n    color: 'var(--second-text-color)',\n  },\n  '& div input:placeholder': {\n    padding: '17px',\n\n    fontSize: '14px',\n    lineHeight: '1.14',\n    letterSpacing: '0.04em',\n    textTransform: 'initial',\n\n    color: 'var(--text-color-input)',\n  },\n  '& div fieldset': {\n    border: '1px solid transparent',\n    borderTopLeftRadius: '30px',\n    borderTopRightRadius: '30px',\n  },\n  '& p': {\n    margin: '4px 0px',\n\n    textTransform: 'initial',\n  },\n});\n\nconst TextFieldStyledExpIncTab = styled(TextField)({\n  width: '180px',\n\n  border: '2px solid var(--btn-color)',\n  borderTopLeftRadius: '30px',\n\n  background: 'var(--background-color)',\n\n  '& div input': {\n    padding: '10px 15px',\n\n    fontWeight: '700',\n    fontSize: '12px',\n    lineHeight: '1.17',\n    letterSpacing: '0.02em',\n    textTransform: 'initial',\n\n    color: 'var(--second-text-color)',\n  },\n  '& div input:placeholder': {\n    padding: '17px',\n\n    fontSize: '14px',\n    lineHeight: '1.14',\n    letterSpacing: '0.04em',\n    textTransform: 'initial',\n\n    color: 'var(--text-color-input)',\n  },\n  '& div fieldset': {\n    border: '1px solid transparent',\n    borderTopLeftRadius: '30px',\n  },\n  '& p': {\n    margin: '4px 0px',\n\n    textTransform: 'initial',\n  },\n});\n\nconst TextFieldStyledExpIncDesk = styled(TextField)({\n  width: '300px',\n\n  border: '2px solid var(--btn-color)',\n  borderTopLeftRadius: '30px',\n\n  background: 'var(--background-color)',\n\n  '& div input': {\n    padding: '10px 15px',\n\n    fontWeight: '700',\n    fontSize: '12px',\n    lineHeight: '1.17',\n    letterSpacing: '0.02em',\n    textTransform: 'initial',\n\n    color: 'var(--second-text-color)',\n  },\n  '& div input:placeholder': {\n    padding: '17px',\n\n    fontSize: '14px',\n    lineHeight: '1.14',\n    letterSpacing: '0.04em',\n    textTransform: 'initial',\n\n    color: 'var(--text-color-input)',\n  },\n  '& div fieldset': {\n    border: '1px solid transparent',\n    borderTopLeftRadius: '30px',\n  },\n  '& p': {\n    margin: '4px 0px',\n\n    textTransform: 'initial',\n  },\n});\n\nconst TextFieldStyledAccount = styled(TextField)({\n  width: '100%',\n\n  '& div': {\n    border: 'none',\n    borderRadius: '30px',\n    background: 'var(--second-background-color)',\n  },\n  '& div input': {\n    padding: '17px',\n\n    fontSize: '14px',\n    lineHeight: '1.14',\n    letterSpacing: '0.04em',\n    textTransform: 'initial',\n\n    color: '#A6ABB9',\n    background: '#F6F7FB',\n\n    borderRadius: '30px',\n  },\n  '& p': {\n    margin: '4px 0px',\n\n    textTransform: 'initial',\n  },\n});\n\nexport default function FormInputText({ name, control, label, required }) {\n  const { pathname } = useLocation();\n\n  const isMobile = useMediaQuery('(max-width: 767.98px)');\n  const isTabletMin = useMediaQuery('(min-width: 768px)');\n  const isTabletMax = useMediaQuery('(max-width: 1279.98px)');\n  const isDesktop = useMediaQuery('(min-width: 1280px)');\n\n  const styleFormLogReg = pathname === '/login' || pathname === '/signup' ? true : false;\n  const styleFormAddExpInc =\n    pathname === '/expenses' || pathname === '/income' ? true : false;\n  const styleFormAccount = pathname === '/settings/account' ? true : false;\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      rules={{\n        required: required,\n      }}\n      render={({ field: { onChange, value }, fieldState: { error } }) => (\n        <>\n          {styleFormLogReg && (\n            <TextFieldStyled\n              variant=\"outlined\"\n              placeholder={label}\n              value={value}\n              onChange={onChange}\n              error={!!error}\n              helperText={error ? error.message : null}\n            />\n          )}\n\n          {styleFormAddExpInc && (\n            <>\n              {isMobile && (\n                <TextFieldStyledExpInc\n                  type=\"text\"\n                  variant=\"outlined\"\n                  placeholder={label}\n                  value={value}\n                  onChange={onChange}\n                  error={!!error}\n                  helperText={error ? error.message : null}\n                />\n              )}\n              {isTabletMin && isTabletMax && (\n                <TextFieldStyledExpIncTab\n                  type=\"text\"\n                  variant=\"outlined\"\n                  placeholder={label}\n                  value={value}\n                  onChange={onChange}\n                  error={!!error}\n                  helperText={error ? error.message : null}\n                />\n              )}\n              {isDesktop && (\n                <TextFieldStyledExpIncDesk\n                  type=\"text\"\n                  variant=\"outlined\"\n                  placeholder={label}\n                  value={value}\n                  onChange={onChange}\n                  error={!!error}\n                  helperText={error ? error.message : null}\n                />\n              )}\n            </>\n          )}\n\n          {styleFormAccount && (\n            <TextFieldStyledAccount\n              variant=\"outlined\"\n              placeholder={label}\n              value={value}\n              onChange={onChange}\n              error={!!error}\n              helperText={error ? error.message : null}\n            />\n          )}\n        </>\n      )}\n    />\n  );\n}\n","import Text from 'components/ui/Text/Text';\n\nimport './SlideWindow.scss';\nimport Section from 'components/layout/Section/Section';\n\nexport default function SlideWindow({ text, children }) {\n  const handleClick = ({ target, currentTarget }) => {\n    if (target.nodeName === 'path' || target.nodeName === 'svg') {\n      currentTarget.classList.remove('is-active');\n      document.body.classList.remove('no-scroll');\n      return;\n    }\n\n    currentTarget.classList.add('is-active');\n    document.body.classList.add('no-scroll');\n  };\n  return (\n    <div className=\"btnAddExp\" type=\"button\" onClick={handleClick}>\n      <Text text={text} />\n      <div className=\"menu_nav\">\n        <Section>{children}</Section>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"overleyTab\":\"IncomePage_overleyTab__zxAZk\",\"overlayExpInc\":\"IncomePage_overlayExpInc__qfHi2\",\"overlaySum\":\"IncomePage_overlaySum__PGjKU\",\"overlayTablSum\":\"IncomePage_overlayTablSum__oICK7\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport { getIncomeTransByDate } from 'redux/transaction/transaction-operations';\nimport { getCurrentDate, isLoading } from 'redux/transaction/transaction-selectors';\nimport { getUserIsRefreshing } from 'redux/auth/auth-selectors';\n\nimport Section from 'components/layout/Section/Section';\n\nimport ButtonBack from 'components/ui/ButtonBack/ButtonBack.jsx';\nimport LinkReport from 'components/ui/LinkReport/LinkReport';\nimport ButtonsExpenInc from 'components/ui/ButtonsExpenInc/ButtonsExpenInc';\n\nimport FormAddBalance from 'components/FormAddBalance/FormAddBalance';\nimport FormAddExpInc from 'components/FormAddTransaction/FormAddTransaction';\nimport Calendar from 'components/Calendar/Calendar';\nimport TransactionList from 'components/TransactionList/TransactionList';\nimport SlideWindow from 'components/SlideWindow/SlideWindow.jsx';\nimport TransactionTable from 'components/TransactionTable/TransactionTable';\nimport SummaryTable from 'components/SummaryTable/SummaryTable';\nimport FormAddTransaction from 'components/FormAddTransaction/FormAddTransaction';\nimport Loader from 'components/ui/Loader/Loader';\n\nimport KapustaTwoIcon from 'components/icons/KapustaTwo/KapustaTwo';\nimport KapustaManyIcon from 'components/icons/KapustaMany/KapustaMany';\n\nimport s from './IncomePage.module.scss';\n\nexport default function IncomePage() {\n  const isMobile = useMediaQuery('(max-width: 767.98px)');\n  const isTabletMin = useMediaQuery('(min-width: 768px)');\n  const isTabletMax = useMediaQuery('(max-width: 1279.98px)');\n  const isDesktop = useMediaQuery('(min-width: 1280px)');\n\n  const dispatch = useDispatch();\n  const currentDate = useSelector(getCurrentDate);\n  const loader = useSelector(isLoading);\n\n  const isRefresh = useSelector(getUserIsRefreshing);\n\n  useEffect(() => {\n    if (currentDate === '') {\n      return;\n    }\n    dispatch(getIncomeTransByDate({ reqDate: currentDate }));\n  }, [dispatch, currentDate, isRefresh]);\n\n  return (\n    <>\n      {isMobile && (\n        <>\n          {loader &&<Loader/>}\n          <Section sectionClass=\"sectionMarg\">\n            <ButtonBack text=\"Main page\" width=\"18\" height=\"12\" to=\"/\" />\n            <div className={s.overleyTab}>\n              <LinkReport />\n              <FormAddBalance />\n            </div>\n\n            <Calendar />\n            <SlideWindow text=\"Add income\">\n              <ButtonBack width=\"18\" height=\"12\" to=\"/income\" />\n              <FormAddExpInc />\n            </SlideWindow>\n            <TransactionList listClass=\"listIncome\" />\n          </Section>\n          <ButtonsExpenInc />\n        </>\n      )}\n\n      {isTabletMin && isTabletMax && (\n        <Section sectionClass=\"sectionMarg\">\n          <div className={s.overleyTab}>\n            {loader &&<Loader/>}\n            <LinkReport />\n            <FormAddBalance />\n          </div>\n          <ButtonsExpenInc />\n          <div className={s.overlayExpInc}>\n            <FormAddTransaction />\n            <TransactionTable sectionClass=\"tbodyIncome\" />\n          </div>\n          <div className={s.overlaySum}>\n            <SummaryTable />\n            <KapustaTwoIcon width=\"185\" height=\"145\" />\n          </div>\n        </Section>\n      )}\n\n      {isDesktop && (\n        <Section sectionClass=\"sectionMarg\">\n          <div className={s.overleyTab}>\n            {loader &&<Loader/>}\n            <LinkReport />\n            <FormAddBalance />\n          </div>\n          <ButtonsExpenInc />\n          <div className={s.overlayExpInc}>\n            <FormAddTransaction />\n            <div className={s.overlayTablSum}>\n              <TransactionTable sectionClass=\"tbodyIncome\" />\n              <SummaryTable />\n            </div>\n          </div>\n          <KapustaManyIcon iconClass=\"expens\" width=\"1334\" height=\"232\" />\n        </Section>\n      )}\n    </>\n  );\n}\n"],"names":["TextFieldStyledMob","styled","TextField","width","height","background","border","borderRadius","padding","fontWeight","fontSize","lineHeight","letterSpacing","textTransform","color","opacity","margin","TextFieldStyledTab","borderLeft","textAlign","paddingLeft","TextFieldStyledDesk","FormInputNumber","name","control","label","required","isMobile","useMediaQuery","isTabletMin","isTabletMax","isDesktop","rules","pattern","render","field","onChange","value","error","fieldState","type","variant","placeholder","helperText","message","optionsExp","optionsInc","CssFormControl","FormControl","borderBottomRightRadius","fill","borderColor","CssFormControlTab","MenuItemStyled","MenuItem","FormInputSelect","pathname","useLocation","isTablet","options","Select","displayEmpty","labelId","input","OutlinedInput","disabled","map","option","CalculatorIcon","className","s","viewBox","xmlns","d","FormAddTransaction","dispatch","useDispatch","currentDate","useSelector","getCurrentDate","useForm","defaultValues","date","description","category","balance","handleSubmit","reset","onSubmit","data","addTransactionData","transitionName","transitionDate","transitionCategory","transitionValue","transitionDescription","addTransaction","Calendar","FormInputText","Button","text","btnClass","onClick","TextFieldStyled","TextFieldStyledExpInc","borderTopLeftRadius","borderTopRightRadius","TextFieldStyledExpIncTab","TextFieldStyledExpIncDesk","TextFieldStyledAccount","styleFormLogReg","styleFormAddExpInc","styleFormAccount","SlideWindow","children","target","currentTarget","nodeName","classList","remove","document","body","add","Text","Section","IncomePage","loader","isLoading","isRefresh","getUserIsRefreshing","useEffect","getIncomeTransByDate","reqDate","Loader","sectionClass","ButtonBack","to","LinkReport","FormAddBalance","TransactionList","listClass","ButtonsExpenInc","TransactionTable","SummaryTable","KapustaTwo","KapustaMany","iconClass"],"sourceRoot":""}