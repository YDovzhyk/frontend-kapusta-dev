name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: '16.x'
          
      - name: Install dependencies
        run: npm install
        
      - name: Build the application
        run: npm run build
        
      - name: Build Docker image
        run: docker build -t yuriydovzhyk/frontend-kapusta-dev:latest .
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: yuriydovzhyk/frontend-kapusta-dev:latest
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_GITHUB }}
          
      - name: Push Docker image to GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/frontend-kapusta-dev:latest
          env:
            DOCKER_USERNAME: ${{ github.actor }}
            DOCKER_PASSWORD: ${{ secrets.TOKEN_GITHUB }}
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.TOKEN_GITHUB }}
          publish_dir: ./build
          force_orphan: true
          clean: true
          commit_message: "Deploy to GitHub Pages"
    
      - name: Deploy Docker image to the cloud
        if: github.ref == 'refs/heads/main'
        uses: docker/compose-cli-action@v0.1.1
        with:
          login: true
          compose-version: '1.29.2'
        env:
          DOCKER_HOST: ssh://remote-server
          DOCKER_CLI_EXPERIMENTAL: enabled
          DOCKER_USERNAME: ${{ secrets.REMOTE_DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.REMOTE_DOCKER_PASSWORD }}
          run: |
            docker compose -f docker-compose.prod.yml up -d --remove-orphans
